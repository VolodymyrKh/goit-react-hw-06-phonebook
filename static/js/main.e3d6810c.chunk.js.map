{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/App.module.css","Components/Notification/Notification.module.css","transitions/notificationSlide.module.css","transitions/slide.module.css","transitions/titleSlide.module.css","transitions/pop.module.css","redux/defaultValues.js","redux/contactActions.js","redux/contactReducer.js","redux/filterActions.js","redux/filterReducer.js","redux/store.js","Components/Notification/Notification.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","type","initialState","id","name","number","addContact","createAction","removeContact","contactReducer","createReducer","state","action","payload","filter","contact","changeFilter","filterReducer","rootReducer","combineReducers","contacts","store","configureStore","reducer","Notifification","className","styles","notification","ContactForm","existContact","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","map","includes","setTimeout","contactToAdd","uuid","onAddContact","this","container","CSSTransition","in","timeout","classNames","notificationSlide","unmountOnExit","Notification","contactForm","onSubmit","inputLabel","input","onChange","placeholder","addButton","Component","connect","dispatch","onRemoveContact","contactId","item","mr","deleteButton","onClick","ContactList","items","toLowerCase","filterContacts","TransitionGroup","component","contactList","key","slideTransition","onChangeFilter","label","App","titleAnimation","header","titleSlide","title","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3d6810c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3vwJ9\",\"mr\":\"ContactList_mr__3PRTV\",\"deleteButton\":\"ContactList_deleteButton__hll0S\",\"item\":\"ContactList_item__1O6Aq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"Filter_inputLabel__mu9dg\",\"label\":\"Filter_label__1bPWY\",\"input\":\"Filter_input__uRBV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__EaE2f\",\"header\":\"App_header__1NfDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3_gko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notificationSlide_enter__26NkA\",\"enterActive\":\"notificationSlide_enterActive__1GLkm\",\"exit\":\"notificationSlide_exit__559vB\",\"exitActive\":\"notificationSlide_exitActive__1QQ8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1Q2rB\",\"enterActive\":\"slide_enterActive__31gKG\",\"exit\":\"slide_exit__w5qYs\",\"exitActive\":\"slide_exitActive__P55ZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"titleSlide_enter__1HR-x\",\"enterActive\":\"titleSlide_enterActive__3hlWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__cTTb5\",\"enterActive\":\"pop_enterActive__3evL_\",\"exit\":\"pop_exit__3Gckd\",\"exitActive\":\"pop_exitActive__2Xd9a\"};","export const type = {\r\n  ADDCONTACT: 'ADDCONTACT',\r\n  REMOVECONTACT: 'REMOVECONTACT',\r\n  CHANGEFILTER: 'CHANGEFILTER',\r\n};\r\n\r\nexport const initialState = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  filter: '',\r\n};\r\n","import { type } from './defaultValues';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = contactToAdd => ({\r\n//   type: type.ADDCONTACT,\r\n//   payload: contactToAdd,\r\n// });\r\n\r\n// export const removeContact = contactIdToRemove => ({\r\n//   type: type.REMOVECONTACT,\r\n//   payload: contactIdToRemove,\r\n// });\r\n\r\nexport const addContact = createAction(type.ADDCONTACT);\r\nexport const removeContact = createAction(type.REMOVECONTACT);\r\n\r\n\r\n\r\n","// import { type } from './defaultValues';\r\nimport { initialState } from './defaultValues';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, removeContact } from './contactActions';\r\n\r\n// const contactReducer = (state = initialState.contacts, action) => {\r\n//   switch (action.type) {\r\n//     case type.ADDCONTACT:\r\n//       return [action.payload, ...state];\r\n\r\n//     case type.REMOVECONTACT:\r\n//       return [...state].filter(contact => contact.id !== action.payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contactReducer = createReducer(initialState.contacts, {\r\n  [addContact]: (state, action) => [action.payload, ...state],\r\n  [removeContact]: (state, action) =>\r\n    [...state].filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nexport default contactReducer;\r\n","import { type } from './defaultValues';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const changeFilter = value => ({\r\n//   type: type.CHANGEFILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport const changeFilter = createAction(type.CHANGEFILTER);\r\n","// import { type } from './defaultValues';\r\nimport { initialState } from './defaultValues';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {changeFilter} from './filterActions'\r\n\r\n// const filterReducer = (state = initialState.filter, action) => {\r\n//   switch (action.type) {\r\n//     case type.CHANGEFILTER:\r\n//       return action.payload;\r\n\r\n//       default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer(initialState.filter, {\r\n  [changeFilter]: (state, action) => action.payload\r\n  \r\n});\r\n\r\nexport default filterReducer;\r\n","// import { createStore } from 'redux';\r\n// import { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contactReducer';\r\nimport filterReducer from './filterReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notifification = () => (\r\n  <span className={styles.notification}>Contact already exists</span>\r\n);\r\n\r\nexport default Notifification;\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Notification from '../Notification/Notification';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contactActions';\r\nimport uuid from 'react-uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport notificationSlide from '../../transitions/notificationSlide.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    existContact: PropTypes.bool,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    existContact: false,\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (this.state.existContact) return;\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.existContact) return;\r\n    const stateNames = this.props.contacts.map(({ name }) => name);\r\n\r\n    if (stateNames.includes(this.state.name)) {\r\n      this.setState({ existContact: true });\r\n\r\n      setTimeout(() => this.setState({ existContact: false }), 2500);\r\n      return;\r\n    }\r\n\r\n    const contactToAdd = {\r\n      id: uuid(),\r\n      ...this.state,\r\n    };\r\n\r\n    this.props.onAddContact(contactToAdd);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, existContact } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <CSSTransition\r\n          in={existContact}\r\n          timeout={250}\r\n          classNames={notificationSlide}\r\n          unmountOnExit\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={styles.inputLabel}>\r\n            <span>Name</span>\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Please enter name\"\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.inputLabel}>\r\n            <span>Number</span>\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              placeholder=\"xxx-xx-xx\"\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={styles.addButton}>\r\n            Add contact{' '}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: contactToAdd => dispatch(addContact(contactToAdd)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeContact } from '../../redux/contactActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onRemoveContact }) => (\r\n  <li className={styles.item}>\r\n    <span className={styles.mr}>\r\n      {name}: {number}\r\n      <button\r\n        className={styles.deleteButton}\r\n        type=\"button\"\r\n        onClick={()=> onRemoveContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemoveContact: contactId => dispatch(removeContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactListItem from './ContactListItem';\r\nimport styles from './ContactList.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport slideTransition from '../../transitions/slide.module.css';\r\n\r\nconst filterContacts = (filter, contacts) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { filter, contacts } = this.props;\r\n    const items = filterContacts(filter, contacts);\r\n\r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n        {items.map(item => (\r\n          <CSSTransition\r\n            key={item.id}\r\n            timeout={250}\r\n            classNames={slideTransition}\r\n          >\r\n            <ContactListItem {...item} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/filterActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <label className={styles.inputLabel}>\r\n    <span className={styles.label}>Find contact by name</span>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n      placeholder=\"Enter contact to filter...\"\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport PropTypes from 'prop-types';\r\nimport titleSlide from '../transitions/titleSlide.module.css';\r\nimport styles from './App.module.css';\r\nimport popTransition from '../transitions/pop.module.css';\r\n\r\nclass App extends Component {\r\n  \r\n  static propTypes = {\r\n    titleAnimation: PropTypes.bool,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    ),\r\n  };\r\n\r\n  state = {\r\n    titleAnimation: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ titleAnimation: true });\r\n  }\r\n\r\n  render() {\r\n    const { titleAnimation } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.header}>\r\n          <CSSTransition\r\n            in={titleAnimation}\r\n            timeout={500}\r\n            classNames={titleSlide}\r\n          >\r\n            <h2 className={styles.title}>Phonebook</h2>\r\n          </CSSTransition>\r\n        </div>\r\n        <ContactForm />\r\n\r\n        <CSSTransition\r\n          in={contacts.length > 1}\r\n          timeout={250}\r\n          classNames={popTransition}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        {contacts.length > 0 && <ContactList />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\n\nimport App from './Components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1yga_\",\"inputLabel\":\"ContactForm_inputLabel__37iea\",\"addButton\":\"ContactForm_addButton__1S3nm\",\"input\":\"ContactForm_input__hFoi6\",\"container\":\"ContactForm_container__NopFG\"};"],"sourceRoot":""}